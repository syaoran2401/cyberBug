[{"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\index.js":"1","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\App.js":"2","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\reportWebVitals.js":"3","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HomeTemplate\\CyberBugTemplate.js":"4","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\SidebarCyberBug.js":"5","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainHeader.js":"6","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\MenuCyberBug.js":"7","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainContent.js":"8","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainInfo.js":"9","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\ModalCyberBug\\ModalCyberBug.js":"10","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\CyberBugs\\ProjectSettings\\ProjectSetting.js":"11","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\configStore.js":"12","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ProjectCategoryReducer.js":"13","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\rootSaga.js":"14","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectCategorySaga.js":"15","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\CyberBugsService.js":"16","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\util\\Constants\\settingDOMAIN.js":"17","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\CyberBugsType.js":"18","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectCreateSaga.js":"19","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\LoadingReducer.js":"20","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\LoadingStyle.js":"21","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HomeTemplate\\LoginTemplate.js":"22","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\actions\\JiraAction.js":"23","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\userLoginSaga.js":"24","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\UserLoginReducer.js":"25","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\Login\\UserLogin.js":"26","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\GlobalSetting\\LoadingComponent\\LoadingComponent.js":"27","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\ProjectManagement\\ProjectManagement.js":"28","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\JiraProjectReducer.js":"29","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Forms\\FormsEditProject.js":"30","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ProjectReducer.js":"31","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ModalJiraReducer.js":"32","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\UserSignUpSaga.js":"33","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\SignUp\\UserSignUp.js":"34","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectUpdatedSaga.js":"35","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\HistoryReducer.js":"36","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectDeleteSaga.js":"37","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\ProjectService.js":"38","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\BaseService.js":"39","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\util\\Notifcation\\Notification.js":"40","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\UserService.js":"41","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\UserSaga.js":"42","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Forms\\FormCreateTask.js":"43","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\TaskTypeSaga.js":"44","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\TaskTypeReducer.js":"45","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\TaskTypeConstant.js":"46","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\TaskTypeService.js":"47","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\PrioritySaga.js":"48","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\PriorityService.js":"49","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\PriorityType.js":"50","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\PriorityReducer.js":"51","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\UserReducer.js":"52","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\TaskSaga.js":"53","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\TaskService.js":"54","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\TaskType.js":"55","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\StatusReducer.js":"56","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\StatusType.js":"57","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\StatusSaga.js":"58","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\StatusService.js":"59","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\UserType.js":"60","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\ProjectDetail\\IndexCyberBugs.js":"61","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\TaskReducer.js":"62","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HOC\\Jira\\DrawerJira.js":"63","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\DemoDragDrop\\DemoDragDrop.js":"64","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\DragAndDropDnd\\DragAnhDropDnd.js":"65","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\CommentReducer.js":"66","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\CommentTypes.js":"67","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\CommentSaga.js":"68","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\CommentService.js":"69","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\UserManagement\\UserManagement.js":"70"},{"size":675,"mtime":1611693962012,"results":"71","hashOfConfig":"72"},{"size":2239,"mtime":1613851206441,"results":"73","hashOfConfig":"72"},{"size":362,"mtime":499162500000,"results":"74","hashOfConfig":"72"},{"size":760,"mtime":1611693784772,"results":"75","hashOfConfig":"72"},{"size":1716,"mtime":1613851727044,"results":"76","hashOfConfig":"72"},{"size":680,"mtime":1612697360462,"results":"77","hashOfConfig":"72"},{"size":3618,"mtime":1613931110181,"results":"78","hashOfConfig":"72"},{"size":4711,"mtime":1613851524952,"results":"79","hashOfConfig":"72"},{"size":2073,"mtime":1613934302286,"results":"80","hashOfConfig":"72"},{"size":26999,"mtime":1613931455851,"results":"81","hashOfConfig":"72"},{"size":4191,"mtime":1613851898872,"results":"82","hashOfConfig":"72"},{"size":1513,"mtime":1613653990642,"results":"83","hashOfConfig":"72"},{"size":431,"mtime":1611777976286,"results":"84","hashOfConfig":"72"},{"size":2265,"mtime":1613907385975,"results":"85","hashOfConfig":"72"},{"size":794,"mtime":1611777393139,"results":"86","hashOfConfig":"72"},{"size":2284,"mtime":1612449181778,"results":"87","hashOfConfig":"72"},{"size":443,"mtime":1612172365359,"results":"88","hashOfConfig":"72"},{"size":1355,"mtime":1613380573625,"results":"89","hashOfConfig":"72"},{"size":3232,"mtime":1613852449620,"results":"90","hashOfConfig":"72"},{"size":499,"mtime":1611771430871,"results":"91","hashOfConfig":"72"},{"size":93,"mtime":1611661572577,"results":"92","hashOfConfig":"72"},{"size":1198,"mtime":1613851605709,"results":"93","hashOfConfig":"72"},{"size":701,"mtime":1612173188637,"results":"94","hashOfConfig":"72"},{"size":1282,"mtime":1613852705658,"results":"95","hashOfConfig":"72"},{"size":625,"mtime":1613852398923,"results":"96","hashOfConfig":"72"},{"size":2654,"mtime":1613851944821,"results":"97","hashOfConfig":"72"},{"size":557,"mtime":1611771422212,"results":"98","hashOfConfig":"72"},{"size":11338,"mtime":1614000157742,"results":"99","hashOfConfig":"72"},{"size":735,"mtime":1612776689505,"results":"100","hashOfConfig":"72"},{"size":4846,"mtime":1613851848874,"results":"101","hashOfConfig":"72"},{"size":734,"mtime":1612621845221,"results":"102","hashOfConfig":"72"},{"size":1414,"mtime":1613051369931,"results":"103","hashOfConfig":"72"},{"size":936,"mtime":1613852688859,"results":"104","hashOfConfig":"72"},{"size":3419,"mtime":1613852293426,"results":"105","hashOfConfig":"72"},{"size":1090,"mtime":1613852511649,"results":"106","hashOfConfig":"72"},{"size":372,"mtime":1612342240393,"results":"107","hashOfConfig":"72"},{"size":1482,"mtime":1613852496386,"results":"108","hashOfConfig":"72"},{"size":466,"mtime":1613852769349,"results":"109","hashOfConfig":"72"},{"size":1122,"mtime":1612341074589,"results":"110","hashOfConfig":"72"},{"size":208,"mtime":1612346757829,"results":"111","hashOfConfig":"72"},{"size":987,"mtime":1613852797866,"results":"112","hashOfConfig":"72"},{"size":4474,"mtime":1614000988800,"results":"113","hashOfConfig":"72"},{"size":11575,"mtime":1613851797785,"results":"114","hashOfConfig":"72"},{"size":798,"mtime":1613852584621,"results":"115","hashOfConfig":"72"},{"size":381,"mtime":1612792023730,"results":"116","hashOfConfig":"72"},{"size":130,"mtime":1612778740023,"results":"117","hashOfConfig":"72"},{"size":243,"mtime":1613852791282,"results":"118","hashOfConfig":"72"},{"size":805,"mtime":1613852423117,"results":"119","hashOfConfig":"72"},{"size":244,"mtime":1613852758203,"results":"120","hashOfConfig":"72"},{"size":138,"mtime":1612780201731,"results":"121","hashOfConfig":"72"},{"size":389,"mtime":1612793528608,"results":"122","hashOfConfig":"72"},{"size":1297,"mtime":1613932193079,"results":"123","hashOfConfig":"72"},{"size":4709,"mtime":1613852567580,"results":"124","hashOfConfig":"72"},{"size":599,"mtime":1613852784551,"results":"125","hashOfConfig":"72"},{"size":598,"mtime":1613395551296,"results":"126","hashOfConfig":"72"},{"size":381,"mtime":1613035758149,"results":"127","hashOfConfig":"72"},{"size":114,"mtime":1613035559953,"results":"128","hashOfConfig":"72"},{"size":633,"mtime":1613852525079,"results":"129","hashOfConfig":"72"},{"size":230,"mtime":1613852775731,"results":"130","hashOfConfig":"72"},{"size":503,"mtime":1613928454711,"results":"131","hashOfConfig":"72"},{"size":948,"mtime":1613851524381,"results":"132","hashOfConfig":"72"},{"size":1888,"mtime":1613382427503,"results":"133","hashOfConfig":"72"},{"size":1368,"mtime":1613851693181,"results":"134","hashOfConfig":"72"},{"size":5170,"mtime":1613851917329,"results":"135","hashOfConfig":"72"},{"size":4244,"mtime":1613559508537,"results":"136","hashOfConfig":"72"},{"size":754,"mtime":1613670055941,"results":"137","hashOfConfig":"72"},{"size":347,"mtime":1613685036533,"results":"138","hashOfConfig":"72"},{"size":2581,"mtime":1614001005421,"results":"139","hashOfConfig":"72"},{"size":617,"mtime":1613852737203,"results":"140","hashOfConfig":"72"},{"size":8699,"mtime":1614000265821,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"yv38up",{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"144"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"144"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"144"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"144"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\index.js",[],["290","291"],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\App.js",["292"],"import {  Switch, useHistory } from \"react-router-dom\";\nimport CyberbugsTemplate from \"./HomeTemplate/CyberBugTemplate\";\nimport ProjectSetting from \"./page/CyberBugs/ProjectSettings/ProjectSetting\";\nimport LoginTemplate from \"./HomeTemplate/LoginTemplate\";\nimport Login from \"./page/Login/UserLogin\";\nimport 'antd/dist/antd.css';\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_HISTORY } from \"./redux/types/CyberBugsType\";\nimport LoadingComponent from \"./components/GlobalSetting/LoadingComponent/LoadingComponent\";\nimport ProjectManagement from \"./page/ProjectManagement/ProjectManagement\";\nimport DrawerJira from \"./HOC/Jira/DrawerJira\";\nimport UserSignUp from \"./page/SignUp/UserSignUp\";\nimport IndexCyberBugs from \"./ProjectDetail/IndexCyberBugs\";\nimport DemoDragDrop from \"./page/DemoDragDrop/DemoDragDrop\";\nimport DragAnhDropDnd from \"./page/DragAndDropDnd/DragAnhDropDnd\";\nimport UserManagement from \"./page/UserManagement/UserManagement\";\n\n\nfunction App() {\n\n  const history = useHistory();\n  const dispatch = useDispatch()\n\n  // dispatch history để bên userLoginSaga có thể xài đc hàm history.push\n  useEffect(() => {\n    dispatch({\n      type: ADD_HISTORY,\n      history: history\n    })\n  }, [])\n\n  return (\n    <>\n      <LoadingComponent />\n      <DrawerJira/>\n      <Switch>\n        <CyberbugsTemplate exact path='/dragdrop' Component={DemoDragDrop}></CyberbugsTemplate>\n        <CyberbugsTemplate  exact path='/dragdropdnd' Component={DragAnhDropDnd}/>\n        <LoginTemplate exact path='/login' Component={Login} />\n        <LoginTemplate exact path='/signup' Component={UserSignUp}></LoginTemplate>\n        <CyberbugsTemplate exact path='/home' Component={IndexCyberBugs} />\n        <CyberbugsTemplate exact path='/projectsettings' Component={ProjectSetting} />\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement}/>\n        <CyberbugsTemplate exact path='/projectDetail/:projectId' Component={IndexCyberBugs}/>\n        <CyberbugsTemplate exact path='/usermanagement' Component={UserManagement}/>\n\n\n        <CyberbugsTemplate exact path='/' Component={IndexCyberBugs} />\n\n        \n      </Switch>\n    </>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\reportWebVitals.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HomeTemplate\\CyberBugTemplate.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\SidebarCyberBug.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainHeader.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\MenuCyberBug.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainContent.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\Main\\MainInfo.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Cyberbugs\\ModalCyberBug\\ModalCyberBug.js",["293","294","295","296","297","298"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactHtmlParse from 'react-html-parser'\r\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/types/StatusType';\r\nimport { GET_ALL_PRIORITY_TYPE_SAGA } from '../../../redux/types/PriorityType';\r\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN } from '../../../redux/types/TaskType';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/types/TaskTypeConstant';\r\nimport { Select } from 'antd';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { DELETE_COMMENT_SAGA,  INSERT_COMMENT_SAGA, UPDATE_COMMENT_SAGA } from '../../../redux/types/CommentTypes';\r\n\r\n\r\nexport default function ModalCyberBug(props) {\r\n\r\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n    const { projectDetail } = useSelector(state => state.ProjectReducer);\r\n    const { userComment } = useSelector(state => state.CommentReducer);\r\n    const { userLogin } = useSelector(state => state.UserLoginReducer);\r\n    const [visibleEditor, setVisibleEditor] = useState(false);\r\n    const [visibleCommentEditor, setVisibleCommentEditor] = useState(false);\r\n    const [visibleAddComment, setVisibleAddComment] = useState(false)\r\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\r\n    const [content, setContent] = useState(taskDetailModal.description)\r\n\r\n    const [selectedComment, setSelectedComment] = useState()\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_ALL_STATUS_SAGA,\r\n        });\r\n        dispatch({\r\n            type: GET_ALL_PRIORITY_TYPE_SAGA,\r\n        });\r\n        dispatch({\r\n            type: GET_ALL_TASK_TYPE_SAGA\r\n        })\r\n    }, [])\r\n\r\n    const renderDescription = () => {\r\n        const jsxDescription = ReactHtmlParse(taskDetailModal.description);\r\n        return <div >\r\n            {visibleEditor ?\r\n                <div>\r\n                    <Editor\r\n                        name=\"description\"\r\n                        initialValue={taskDetailModal.description}\r\n                        init={{\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                \"advlist autolink lists link image charmap print preview anchor\",\r\n                                \"searchreplace visualblocks code fullscreen\",\r\n                                \"insertdatetime media table paste code help wordcount\",\r\n                            ],\r\n                            toolbar:\r\n                                \"undo redo | formatselect | bold italic backcolor | \\\r\n                                alignleft aligncenter alignright alignjustify | \\\r\n                                bullist numlist outdent indent | removeformat | help\",\r\n                        }}\r\n                        onEditorChange={(content, editor) => {\r\n                            setContent(content)\r\n                        }}\r\n                    />\r\n                    <button className='btn btn-primary mt-2' onClick={() => {\r\n                        dispatch({\r\n                            type: HANDLE_CHANGE_POST_API_SAGA,\r\n                            actionType: CHANGE_TASK_MODAL,\r\n                            name: 'description',\r\n                            value: content\r\n                        })\r\n                        // dispatch({\r\n                        //     type: CHANGE_TASK_MODAL,\r\n                        //     name: 'description',\r\n                        //     value: content\r\n                        // })\r\n                        setVisibleEditor(false)\r\n                    }}>Save</button>\r\n                    <button className='btn btn-primary ml-3 mt-2' onClick={() => {\r\n                        dispatch({\r\n                            type: HANDLE_CHANGE_POST_API_SAGA,\r\n                            actionType: CHANGE_TASK_MODAL,\r\n                            name: 'description',\r\n                            value: historyContent\r\n                        })\r\n                        // dispatch({\r\n                        //     type: CHANGE_TASK_MODAL,\r\n                        //     name: 'description',\r\n                        //     value: historyContent\r\n                        // })\r\n                        setVisibleEditor(false)\r\n                    }}>Cancel</button>\r\n                </div>\r\n                :\r\n                <div onClick={() => {\r\n                    setHistoryContent(taskDetailModal.description)\r\n                    setVisibleEditor(!visibleEditor)\r\n                }}> {jsxDescription}</div>}\r\n\r\n        </div>\r\n    }\r\n\r\n    const renderStatus = () => {\r\n        return arrStatus.map((status, index) => {\r\n            return <option value={status.statusId} key={index}>{status.statusName}</option>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTimeTracking = () => {\r\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\r\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\r\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\r\n        return (\r\n            <div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <i className=\"fa fa-clock\" />\r\n                    <div style={{ width: '100%' }}>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\r\n                        </div>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <p className=\"logged\">{Number(timeTrackingSpent)}h logged</p>\r\n                            <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h estimated</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className='row'>\r\n                    <div className=\"col-6\">\r\n                        <input className='form-control' name='timeTrackingSpent' type=\"text\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <input className='form-control' name='timeTrackingRemaining' type=\"text\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderAddComment = () => {\r\n        return <div className='d-flex align-items-center' style={{ border: '1px solid black', minWidth: '388px' }}>\r\n\r\n            {visibleAddComment ? <div>\r\n                <Editor\r\n                    name=\"description\"\r\n                    init={{\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                            \"searchreplace visualblocks code fullscreen\",\r\n                            \"insertdatetime media table paste code help wordcount\",\r\n                        ],\r\n                        toolbar:\r\n                            \"undo redo | formatselect | bold italic backcolor | \\\r\n                                   alignleft aligncenter alignright alignjustify | \\\r\n                                   bullist numlist outdent indent | removeformat | help\",\r\n                    }}\r\n                    onEditorChange={(content, editor) => {\r\n                        setContent(content)\r\n                    }}\r\n                />\r\n                <div className='d-flex justify-content-end'>\r\n                    <button className='btn btn-primary' onClick={() => {\r\n                        dispatch({\r\n                            type: INSERT_COMMENT_SAGA,\r\n                            taskId: taskDetailModal.taskId,\r\n                            model: {\r\n                                taskId: taskDetailModal.taskId,\r\n                                contentComment: content\r\n                            }\r\n                        })\r\n                        setVisibleAddComment(false)\r\n                    }}>Save</button>\r\n\r\n                    <button className='btn btn-danger mx-3' onClick={() => {\r\n                        setVisibleAddComment(false)\r\n                    }}>Close</button>\r\n                </div>\r\n            </div>\r\n\r\n                :\r\n                <div className='ml-2' onClick={() => {\r\n                    setVisibleAddComment(true)\r\n                }}>Add a comment ...\r\n            </div>}\r\n        </div>\r\n    }\r\n\r\n\r\n    const deleteComment = (idUser, idComment) => {\r\n        const index = taskDetailModal.assigness.findIndex(item => item.id === idUser);\r\n        if (index !== -1) {\r\n            dispatch({\r\n                type: DELETE_COMMENT_SAGA,\r\n                idComment,\r\n                taskId: taskDetailModal.taskId\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderUserComment = () => {\r\n        return userComment.map((item, index) => {\r\n            const jsxComment = ReactHtmlParse(item.contentComment);\r\n\r\n            return <div className=\"comment-item mt-3\" key={index}>\r\n                <div>{item.name}</div>\r\n                <div className=\"comment-item\">\r\n                    <div className=\"display-comment\" style={{ display: 'flex' }}>\r\n                        <div className=\"avatar\">\r\n                            <img src={item.user.avatar} alt='download1' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {(visibleCommentEditor && selectedComment.id === item.id) ? <div>\r\n                                <Editor\r\n                                    name=\"description\"\r\n                                    initialValue={item.contentComment}\r\n                                    init={{\r\n                                        height: 500,\r\n                                        menubar: false,\r\n                                        plugins: [\r\n                                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                                            \"searchreplace visualblocks code fullscreen\",\r\n                                            \"insertdatetime media table paste code help wordcount\",\r\n                                        ],\r\n                                        toolbar:\r\n                                            \"undo redo | formatselect | bold italic backcolor | \\\r\n                                   alignleft aligncenter alignright alignjustify | \\\r\n                                   bullist numlist outdent indent | removeformat | help\",\r\n                                    }}\r\n                                    onEditorChange={(content, editor) => {\r\n                                        setContent(content)\r\n                                    }}\r\n                                />\r\n                                <button onClick={() => {\r\n                                    dispatch({\r\n                                        type: UPDATE_COMMENT_SAGA,\r\n                                        taskId: taskDetailModal.taskId,\r\n                                        id: item.id,\r\n                                        contentComment: content\r\n                                    })\r\n                                    setVisibleCommentEditor(false)\r\n                                }}>Save</button>\r\n                                <button onClick={() => {\r\n                                    setVisibleCommentEditor(false)\r\n                                }}>Cancel</button>\r\n                            </div>\r\n                                : <div >{jsxComment} </div>}\r\n\r\n\r\n                            {userLogin.id === item.user.userId ? <div>\r\n                                <span className='mr-2' style={{ color: '#929398', cursor: 'pointer' }} onClick={() => {\r\n                                    setSelectedComment(item)\r\n                                    setVisibleCommentEditor(true)\r\n                                }}>Edit</span>\r\n                                    •\r\n                                    <span className='ml-2' style={{ color: '#929398', cursor: 'pointer' }} onClick={() => {\r\n                                    const userId = item.userId;\r\n                                    const idComment = item.id\r\n                                    deleteComment(userId, idComment)\r\n                                }}>Delete</span>\r\n                            </div> : ' '}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        dispatch({\r\n            type: HANDLE_CHANGE_POST_API_SAGA,\r\n            actionType: CHANGE_TASK_MODAL,\r\n            name,\r\n            value\r\n        })\r\n\r\n\r\n        // dispatch({\r\n        //     type: CHANGE_TASK_MODAL,\r\n        //     name,\r\n        //     value\r\n        // })\r\n    }\r\n\r\n    return (\r\n        // <!-- Search Modal -->\r\n        <div>\r\n            <div className=\"modal fade\" id=\"searchModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"searchModal\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-search\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"search-block\">\r\n                                <input className=\"search\" />\r\n                                <i className=\"fa fa-search\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>RECENT ISSUES</p>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className=\"icon\">\r\n                                    <i className=\"fa fa-bookmark\" />\r\n                                </div>\r\n                                <div>\r\n                                    <p>cyberlearn</p>\r\n                                    <p>BUG-238066</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* // Info Modal */}\r\n            <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-info\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"task-title\">\r\n                                <i className=\"fa fa-bookmark\" />\r\n                                <select name='typeId' value={taskDetailModal.typeId} onChange={(e) => handleChange(e)}>\r\n                                    {arrTaskType.map((item, index) => {\r\n                                        return <option value={item.id} key={index}>{item.taskType}</option>\r\n                                    })}\r\n                                </select>\r\n\r\n                                <span>{taskDetailModal.taskName}</span>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }} className=\"task-click\">\r\n                                <div>\r\n                                    <i className=\"fab fa-telegram-plane\" />\r\n                                    <span style={{ paddingRight: 20 }}>Give feedback</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"fa fa-link\" />\r\n                                    <span style={{ paddingRight: 20 }}>Copy link</span>\r\n                                </div>\r\n                                <i className=\"fa fa-trash-alt\" style={{ cursor: 'pointer' }} />\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">×</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-8\">\r\n                                        <p className=\"issue\">This is an issue of type: Task.</p>\r\n                                        <div className=\"description\">\r\n                                            <p className='font-weight-bold'>Description</p>\r\n                                            {renderDescription()}\r\n                                        </div>\r\n\r\n                                        <div className=\"comment mt-4\">\r\n                                            <h6>Comment</h6>\r\n                                            <div className=\"block-comment\" style={{ display: 'flex' }}>\r\n                                                <div className=\"avatar\">\r\n                                                    <img src={userLogin.avatar} alt='download1' />\r\n                                                </div>\r\n                                                {renderAddComment()}\r\n                                             \r\n                                            </div>\r\n                                            <div className=\"lastest-comment\">\r\n                                                {renderUserComment()}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <div className=\"status\">\r\n                                            <h6>STATUS</h6>\r\n                                            <select name='statusId' className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {\r\n                                                handleChange(e)\r\n                                                // const action = {\r\n                                                //     type:UPDATE_STATUS_TASK_SAGA,\r\n                                                //     taskUpdateStatus:{\r\n                                                //         taskId:taskDetailModal.taskId,\r\n                                                //         statusId: e.target.value,\r\n                                                //         projectId: taskDetailModal.projectId\r\n                                                //     }\r\n                                                // }\r\n                                                // dispatch(action)\r\n                                            }}>\r\n                                                {renderStatus()}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"assignees\">\r\n                                            <h6>ASSIGNEES</h6>\r\n                                            <div className='row'>\r\n                                                {taskDetailModal.assigness.map((mem, index) => {\r\n                                                    return <div key={index} className='col-6 my-1 '>\r\n                                                        <div  style={{ display: 'flex' }} className=\"item\">\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={mem.avatar} alt='download1' />\r\n                                                            </div>\r\n                                                            <p className=\"name mt-1  ml-1\">\r\n                                                                {mem.name}\r\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5, cursor: 'pointer' }} onClick={() => {\r\n\r\n                                                                    dispatch({\r\n                                                                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                                        actionType: REMOVE_USER_ASSIGN,\r\n                                                                        userId: mem.id\r\n                                                                    })\r\n\r\n                                                                    // dispatch({\r\n                                                                    //     type: REMOVE_USER_ASSIGN,\r\n                                                                    //     userId: mem.id\r\n                                                                    // })\r\n                                                                }} />\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                })}\r\n\r\n                                                <div className='col-6 my-4'>\r\n                                                    <Select\r\n                                                        // hàm filter => lọc member đã có ra khỏi thẻ option\r\n                                                        options={projectDetail.members?.filter(member => {\r\n                                                            let index = taskDetailModal.assigness?.findIndex(assigness => assigness.id === member.userId);\r\n                                                            if (index !== -1) {\r\n                                                                return false\r\n                                                            }\r\n                                                            return true;\r\n                                                        })?.map((mem) => {\r\n                                                            return { value: mem.userId, label: mem.name }\r\n                                                        })}\r\n                                                        optionFilterProp='label'\r\n                                                        style={{ width: '100%' }}\r\n                                                        className='form-control'\r\n                                                        name='listUser'\r\n                                                        value='+ Add More'\r\n                                                        onSelect={(value) => {\r\n                                                            if (value == '0') {\r\n                                                                return\r\n                                                            }\r\n                                                            let userSelect = projectDetail.members.find(mem => mem.userId == value);\r\n                                                            userSelect = { ...userSelect, id: userSelect.userId };\r\n\r\n                                                            //dispatch reducer\r\n\r\n                                                            dispatch({\r\n                                                                type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                                actionType: CHANGE_ASSIGNESS,\r\n                                                                assigness: userSelect\r\n                                                            })\r\n\r\n                                                            // dispatch({\r\n                                                            //     type: CHANGE_ASSIGNESS,\r\n                                                            //     assigness: userSelect\r\n                                                            // })\r\n                                                        }}>\r\n\r\n                                                    </Select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"priority\" style={{ marginBottom: 20 }}>\r\n                                            <h6>PRIORITY</h6>\r\n                                            <select name='priorityId' className='form-control' value={taskDetailModal.priorityId} onChange={(e) => {\r\n                                                handleChange(e)\r\n                                            }}>\r\n                                                {arrPriority.map((item, index) => {\r\n                                                    return <option value={item.priorityId} key={index}>{item.priority}</option>\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"estimate\">\r\n                                            <h6>ORIGINAL ESTIMATE (HOURS)</h6>\r\n                                            <input name='originalEstimate' type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => handleChange(e)} />\r\n                                        </div>\r\n                                        <div className=\"time-tracking\">\r\n                                            <h6>TIME TRACKING</h6>\r\n                                            {renderTimeTracking()}\r\n\r\n                                        </div>\r\n                                        <div style={{ color: '#929398' }}>Create at a month ago</div>\r\n                                        <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\CyberBugs\\ProjectSettings\\ProjectSetting.js",["299","300"],"import React, { useEffect } from \"react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { GET_ALL_PROJECT_CATEGORY } from \"../../../redux/types/CyberBugsType\";\r\nimport { jiraCreatProjectAction } from \"../../../redux/actions/JiraAction\";\r\n\r\nfunction ProjectSetting(props) {\r\n    const {\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory\r\n    );\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const renderArrayCategory = () => {\r\n        return arrProjectCategory.map((item, index) => {\r\n            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\r\n        })\r\n    }\r\n\r\n    // hàm của tiny\r\n    const handleEditorChange = (content, editor) => {\r\n        // setFieldValue => chỉ lấy dữ liệu của trường description. Thay cho hàm handleChange\r\n        // setValue => set 1 object          \r\n        setFieldValue('description', content)\r\n    };\r\n\r\n    useEffect(() => {\r\n      dispatch({\r\n          type:GET_ALL_PROJECT_CATEGORY,\r\n      })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"text-center \">\r\n                <h1>Create Project</h1>\r\n            </div>\r\n            <form className=\"container mt-5\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                <div className=\"form-group\">\r\n                    <p>Name</p>\r\n                    <input className=\"form-control\" name=\"projectName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description</p>\r\n                    <Editor\r\n                        name=\"description\"\r\n                        init={{\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                \"advlist autolink lists link image charmap print preview anchor\",\r\n                                \"searchreplace visualblocks code fullscreen\",\r\n                                \"insertdatetime media table paste code help wordcount\",\r\n                            ],\r\n                            toolbar:\r\n                                \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help\",\r\n                        }}\r\n                        onEditorChange={handleEditorChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Type:</p>\r\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\r\n                        {renderArrayCategory()}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                    Create Project\r\n        </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst projectSettingForm = withFormik({\r\n    // enableReinitialize => mỗi lần redux thay đổi thì sẽ chạy lại hàm projectSettingForm\r\n    enableReinitialize:true,\r\n    mapPropsToValues: (props) =>{\r\n        return{\r\n            projectName:'',\r\n            description:'',\r\n            categoryId:props.arrProjectCategory[0]?.id, \r\n            // Vì mới đầu load lên thì reducer là rỗng, nên xài toán tử ? => nếu có thì .id ngược lại thì trả về undefined\r\n\r\n        }\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n    }),\r\n\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch(jiraCreatProjectAction(values))\r\n    },\r\n\r\n    displayName: 'ProjectSettingFormik',\r\n})(ProjectSetting);\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        arrProjectCategory : state.ProjectCategoryReducer.arrProjectCategory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(projectSettingForm)\r\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\configStore.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ProjectCategoryReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\rootSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectCategorySaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\CyberBugsService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\util\\Constants\\settingDOMAIN.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\CyberBugsType.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectCreateSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\LoadingReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\LoadingStyle.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HomeTemplate\\LoginTemplate.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\actions\\JiraAction.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\userLoginSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\UserLoginReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\Login\\UserLogin.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\GlobalSetting\\LoadingComponent\\LoadingComponent.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\ProjectManagement\\ProjectManagement.js",["301","302"],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\JiraProjectReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Forms\\FormsEditProject.js",["303","304"],"import { Editor } from '@tinymce/tinymce-react'\r\nimport { withFormik } from 'formik';\r\nimport React, { useEffect, } from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { GET_ALL_PROJECT_CATEGORY, UPDATED_PROJECT_SAGA } from '../../redux/types/CyberBugsType';\r\n\r\nfunction FormsEditProject(props) {\r\n    const {\r\n        values,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory\r\n        );\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const renderArrayCategory = () => {\r\n        return arrProjectCategory.map((item, index) => {\r\n            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setFieldValue('description', values.description);\r\n\r\n        dispatch({\r\n            type:GET_ALL_PROJECT_CATEGORY,\r\n        })\r\n\r\n\r\n        // Load sự kiện submit lên drawer nút submit\r\n        dispatch({\r\n            type: 'SET_SUBMIT_FORM_EDIT',\r\n            submitFunction: handleSubmit\r\n        })\r\n    }, []);\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    };\r\n\r\n    return (\r\n        <form className='container-fluid' onSubmit={handleSubmit}>\r\n            <div className='row'>\r\n                <div className='col-4'>\r\n                    <div className='row'>\r\n                        <div className='form-group'>\r\n                            <p className='font-weight-bold'>Project ID</p>\r\n                            <input value={values.id} disabled type=\"text\" className='form-control' name='projectName' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-4'>\r\n                    <div className='form-group'>\r\n                        <p className='font-weight-bold'>Project Name</p>\r\n                        <input value={values.projectName} type=\"text\" className='form-control' name='projectName' onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-4'>\r\n                    <div className='form-group'>\r\n                        <p className='font-weight-bold'>Project Category</p>\r\n                        <select name='categoryId' value={values.categoryId}>\r\n                            {renderArrayCategory()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-12'>\r\n                    <p className='font-weight-bold'>Description</p>\r\n                    <Editor name=\"description\"\r\n                     initialValue ={values.description}\r\n                     value ={values.description}\r\n                    init={{\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                \"advlist autolink lists link image charmap print preview anchor\",\r\n                                \"searchreplace visualblocks code fullscreen\",\r\n                                \"insertdatetime media table paste code help wordcount\",\r\n                            ],\r\n                            toolbar:\r\n                                \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help\",\r\n                        }}\r\n                        onEditorChange={handleEditorChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst editProjectForm = withFormik({\r\n    // enableReinitialize => mỗi lần redux thay đổi thì sẽ chạy lại hàm projectSettingForm\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        return {\r\n            id: props.projectEditInfo?.id,\r\n            projectName: props.projectEditInfo.projectName,\r\n            description: props.projectEditInfo.description,\r\n            categoryId: props.projectEditInfo.categoryId,\r\n        }\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n    }),\r\n\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        // Khi người dùng submit  => đưa data về backend thông wa API\r\n        const action = {\r\n            type:UPDATED_PROJECT_SAGA,\r\n            projectUpdate:values\r\n        };\r\n        props.dispatch(action)\r\n    },\r\n\r\n    displayName: 'ProjectSettingFormik',\r\n})(FormsEditProject);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        projectEditInfo: state.ProjectReducer.projectEditInfo\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(editProjectForm)\r\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ProjectReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\ModalJiraReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\UserSignUpSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\SignUp\\UserSignUp.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectUpdatedSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\HistoryReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\ProjectDeleteSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\ProjectService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\BaseService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\util\\Notifcation\\Notification.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\UserService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\UserSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\components\\Forms\\FormCreateTask.js",["305","306"],"import { Editor } from '@tinymce/tinymce-react'\r\nimport { Select, Slider } from 'antd'\r\nimport { withFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { GET_ALL_PROJECT_SAGA, GET_USER_SAGA, SUBMIT_CREATE_TASK } from '../../redux/types/CyberBugsType';\r\nimport { GET_ALL_PRIORITY_TYPE_SAGA } from '../../redux/types/PriorityType';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../redux/types/TaskTypeConstant';\r\nimport * as Yup from 'yup';\r\nimport { CREATE_TASK_SAGA } from '../../redux/types/TaskType';\r\nimport { GET_ALL_STATUS_SAGA } from '../../redux/types/StatusType';\r\nimport { GET_ALL_USER_BY_PROJECT_ID_SAGA } from '../../redux/types/UserType';\r\n\r\nconst children = [];\r\n\r\nfunction FormCreateTask(props) {\r\n\r\n    const {\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    //hook\r\n    const [size] = useState('default');\r\n    const [timeTracking, setTimeTracking] = useState({\r\n        timeTrackingSpent: 0,\r\n        timeTrackingRemaining: 0\r\n    })\r\n    const { arrProject } = useSelector(state => state.JiraProjectReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrUserInProject } = useSelector(state => state.UserReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const userOption = arrUserInProject.map((item, index) => {\r\n        return { value: item.userId, label: item.name }\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_ALL_PROJECT_SAGA\r\n        });\r\n        dispatch({\r\n            type: GET_ALL_TASK_TYPE_SAGA\r\n        });\r\n        dispatch({\r\n            type: GET_ALL_PRIORITY_TYPE_SAGA,\r\n        });\r\n        dispatch({\r\n            type: GET_USER_SAGA,\r\n            keyword: ''\r\n        })\r\n        dispatch({\r\n            type: GET_ALL_STATUS_SAGA,\r\n        })\r\n        dispatch({\r\n            type:SUBMIT_CREATE_TASK,\r\n            submitFunction: handleSubmit\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n\r\n    const renderAllProject = () => {\r\n        return arrProject?.map((item, index) => {\r\n            return <option key={index} value={item.id}>{item.projectName}</option>\r\n        })\r\n    }\r\n\r\n    const renderTaskType = () => {\r\n        return arrTaskType?.map((item, index) => {\r\n            return <option key={index} value={item.id}>{item.taskType}</option>\r\n        })\r\n    }\r\n\r\n    const renderPriority = () => {\r\n        return arrPriority.map((item, index) => {\r\n            return <option value={item.priorityId} key={index}>{item.priority}</option>\r\n        })\r\n    }\r\n\r\n\r\n    const renderStatusId = () => {\r\n        return arrStatus?.map((item, index) => {\r\n            return <option value={item.statusId} key={index}>{item.statusName}</option>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='container' onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n                <p className='mb-0 mt-2'>Project</p>\r\n                <select className='form-control' name='projectId' onChange={(e)=>{\r\n\r\n                    // dispatch gia tri lam thay doi user\r\n                    let {value} = e.target;\r\n                    dispatch({\r\n                        type:GET_ALL_USER_BY_PROJECT_ID_SAGA,\r\n                        projectId: value\r\n                    })\r\n\r\n                    // cap nhat gia tri cho project Id\r\n                    setFieldValue('projectId', e.target.value)\r\n                }}>\r\n                    {renderAllProject()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <p className='mb-0 mt-2'>Task name</p>\r\n                <input className='form-control' type=\"text\" name='taskName' onChange={handleChange} />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <p className='mb-0 mt-2'>Status ID</p>\r\n                <select className='form-control' name='statusId' onChange={handleChange}>\r\n                    {renderStatusId()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <p className='mb-0 mt-2'>Priority</p>\r\n                        <select className='form-control' name='priorityId' onChange={handleChange}>\r\n                            {renderPriority()}\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <p className='mb-0 mt-2'>Task type</p>\r\n                        <select className='form-control' name='typeId' onChange={handleChange}>\r\n                            {renderTaskType()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='form-group'>\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <p className='mb-0 mt-2'>Assignees</p>\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            size={size}\r\n                            options={userOption}\r\n                            placeholder=\"Please select\"\r\n                            optionFilterProp='label'\r\n                            // Khi ko fai là thẻ select bình thường, mà mún lấy value thi fai dùng hàm setFieldValue\r\n                            onChange={(values) => {\r\n                                // Set lai gia tri cho listUserAsign\r\n                                setFieldValue('listUserAsign', values)\r\n                            }}\r\n                            onSearch={(value) => {\r\n                               \r\n\r\n                            }}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            {children}\r\n                        </Select>\r\n\r\n                        <div className='row' style={{ marginTop: '32px' }}>\r\n                            <div className='col-12'>\r\n                                <p>Original Estimate</p>\r\n                                <input type=\"number\" defaultValue='0' min='0' className='form-control' name='originalEstimate' onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6 mt-3'>\r\n                        <p>Time Tracking</p>\r\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} onChange={handleChange} />\r\n                        <div className='row'>\r\n                            <div className='col-6'>\r\n                                <div className='text-left font-weight-bold'>{timeTracking.timeTrackingSpent} logged</div>\r\n                            </div>\r\n                            <div className='col-6'>\r\n                                <div className='text-right font-weight-bold'>{timeTracking.timeTrackingRemaining} remaining</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-6'>\r\n                                <p className='mb-0 mt-2'>Time spent</p>\r\n                                <input type=\"number\" defaultValue='0' min='0' className='form-control' name='timeTrackingSpent' onChange={(e) => {\r\n                                    setTimeTracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingSpent: e.target.value\r\n                                    })\r\n                                    setFieldValue('timeTrackingSpent', e.target.value)\r\n                                }} />\r\n                            </div>\r\n                            <div className='col-6'>\r\n                                <p className='mb-0 mt-2'>Time remaining</p>\r\n                                <input type=\"number\" defaultValue='0' min='0' className='form-control' name='timeTrackingRemaining' onChange={(e) => {\r\n                                    setTimeTracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingRemaining: e.target.value\r\n                                    })\r\n                                    setFieldValue('timeTrackingRemaining', e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='form-group'>\r\n                <p>Description</p>\r\n                <Editor\r\n                    name=\"description\"\r\n\r\n                    init={{\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                            \"searchreplace visualblocks code fullscreen\",\r\n                            \"insertdatetime media table paste code help wordcount\",\r\n                        ],\r\n                        toolbar:\r\n                            \"undo redo | formatselect | bold italic backcolor | \\\r\n                            alignleft aligncenter alignright alignjustify | \\\r\n                            bullist numlist outdent indent | removeformat | help\",\r\n                    }}\r\n                    onEditorChange={handleEditorChange}\r\n                />\r\n            </div>\r\n            {/* <button type='submit'>submit</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst createTaskForm = withFormik({\r\n    // enableReinitialize => mỗi lần redux thay đổi thì sẽ chạy lại hàm projectSettingForm\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { arrProject, arrTaskType, arrPriority, arrStatus } = props\r\n        // if(arrProject.length> 0){\r\n        //     props.dispatch({\r\n        //         type:GET_ALL_USER_BY_PROJECT_ID_SAGA,\r\n        //         projectId:  arrProject[0]?.id\r\n        //     })\r\n        // }\r\n        return {\r\n            taskName: '',\r\n            description: '',\r\n            statusId: arrStatus[0]?.statusId,\r\n            originalEstimate: 0,\r\n            timeTrackingSpent: 0,\r\n            timeTrackingRemaining: 0,\r\n            projectId: arrProject[0]?.id,\r\n            typeId: arrTaskType[0]?.id,\r\n            priorityId: arrPriority[0]?.priorityId,\r\n            listUserAsign: []\r\n        }\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n    }),\r\n\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n      \r\n        props.dispatch({\r\n            type: CREATE_TASK_SAGA,\r\n            taskObject: values\r\n        })\r\n    },\r\n\r\n    displayName: 'create task form',\r\n})(FormCreateTask);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrProject: state.JiraProjectReducer.arrProject,\r\n        arrTaskType: state.TaskTypeReducer.arrTaskType,\r\n        arrPriority: state.PriorityReducer.arrPriority,\r\n        arrStatus: state.StatusReducer.arrStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(createTaskForm)","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\TaskTypeSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\TaskTypeReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\TaskTypeConstant.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\TaskTypeService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\PrioritySaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\PriorityService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\PriorityType.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\PriorityReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\UserReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\TaskSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\TaskService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\TaskType.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\StatusReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\StatusType.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\StatusSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\StatusService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\UserType.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\ProjectDetail\\IndexCyberBugs.js",["307"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MainContent from '../components/Cyberbugs/Main/MainContent'\r\nimport MainHeader from '../components/Cyberbugs/Main/MainHeader'\r\nimport MainInfo from '../components/Cyberbugs/Main/MainInfo'\r\nimport { GET_PROJECT_DETAIL_SAGA } from '../redux/types/CyberBugsType'\r\n\r\n\r\n\r\nexport default function IndexCyberBugs(props) {\r\n\r\n    const {projectDetail} = useSelector(state => state.ProjectReducer);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const {projectId} = props.match.params;\r\n        dispatch({\r\n            type:GET_PROJECT_DETAIL_SAGA,\r\n            projectId\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='main'>\r\n        <MainHeader projectDetail={projectDetail}/>\r\n\r\n        <MainInfo projectDetail={projectDetail}/>\r\n\r\n        <MainContent projectDetail={projectDetail}/>\r\n    </div>\r\n    )\r\n}\r\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\TaskReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\HOC\\Jira\\DrawerJira.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\DemoDragDrop\\DemoDragDrop.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\DragAndDropDnd\\DragAnhDropDnd.js",["308"],"import React, { useState } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport _ from 'lodash'\r\n\r\nexport default function DragAnhDropDnd() {\r\n\r\n    const [state, setState] = useState({\r\n        toDo: {\r\n            id: `toDo`,\r\n            items: [\r\n                { id: `1`, taskName: 'Task 1' },\r\n                { id: `2`, taskName: 'Task 2' },\r\n                { id: `3`, taskName: 'Task 3' },\r\n            ]\r\n        },\r\n        inProgress: {\r\n            id: 'inProgress',\r\n            items: [\r\n                { id: `4`, taskName: 'Task 4' },\r\n                { id: `5`, taskName: 'Task 5' },\r\n                { id: `6`, taskName: 'Task 6' },\r\n            ]\r\n        },\r\n        done: {\r\n            id: 'done',\r\n            items: [\r\n                { id: `7`, taskName: 'Task 7' },\r\n                { id: `8`, taskName: 'Task 8' },\r\n                { id: `9`, taskName: 'Task 9' },\r\n            ]\r\n        }\r\n    })\r\n\r\n    const handleDragEnd = (res) => {\r\n        let { destination, source } = res;\r\n        console.log(\"destination\", destination);\r\n        console.log(\"source\", source)\r\n        console.log(\"state[source.droppableId]\", state[source.droppableId])\r\n\r\n        if (!destination) {\r\n            return\r\n        }\r\n\r\n        if (destination.index === source.index && destination.droppableId === source.droppableId){\r\n            return;\r\n        }\r\n\r\n        // Tạo ra task đang đc kéo\r\n        let itemCopy = {...state[source.droppableId].items[source.index]};\r\n        // console.log(itemCopy)\r\n\r\n\r\n\r\n        // cột bắt đầu\r\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\r\n\r\n        state[source.droppableId].items.splice(index,1)\r\n\r\n        // cột đến\r\n        let dropDestination = state[destination.droppableId].items;\r\n        dropDestination.splice(destination.index,0,itemCopy)\r\n\r\n\r\n        console.log(\"dropDestination\",dropDestination)\r\n\r\n      \r\n\r\n       setState(state)\r\n     \r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h3 className='text-center display-4'>Demo DragAndDrop DND</h3>\r\n\r\n            <DragDropContext onDragEnd={(res) => {\r\n                handleDragEnd(res)\r\n            }}>\r\n\r\n                <div className='row'>\r\n                    {_.map(state, (item, index) => {\r\n                        // Hiển thị nội dung kéo thả\r\n                        return <Droppable droppableId={item.id} key={index}>\r\n                            {(provided) => {\r\n                                return <div className='col-4'>\r\n\r\n                                    <div className='bg-dark p-5'\r\n                                        key={index}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n\r\n                                        <h3 className='text-white text-center'>{item.id}</h3>\r\n                                        {item.items.map((task, index) => {\r\n                                            // Hiển thị nội dung được kéo thả\r\n                                            return <Draggable key={task.id} index={index} draggableId={task.id}>\r\n                                                {(provided) => {\r\n                                                    return <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        className='mt-2 p-3 text-center bg-white'>{task.taskName}</div>\r\n                                                }}\r\n                                            </Draggable>\r\n                                        })}\r\n                                        {provided.placeholder}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }}\r\n                        </Droppable>\r\n                    })}\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\reducer\\CommentReducer.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\redux\\types\\CommentTypes.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\sagas\\CyberBugs\\CommentSaga.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\service\\CommentService.js",[],"C:\\Users\\syaor\\Desktop\\Front-End\\Online\\ReactJS\\ReactCyberlearn\\Jira_Clone\\jira_clone\\src\\page\\UserManagement\\UserManagement.js",["309"],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":31,"column":6,"nodeType":"316","endLine":31,"endColumn":8,"suggestions":"317"},{"ruleId":"314","severity":1,"message":"318","line":42,"column":8,"nodeType":"316","endLine":42,"endColumn":10,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":61,"column":33,"nodeType":"322","messageId":"323","endLine":63,"endColumn":86},{"ruleId":"320","severity":1,"message":"321","line":161,"column":29,"nodeType":"322","messageId":"323","endLine":163,"endColumn":89},{"ruleId":"320","severity":1,"message":"321","line":235,"column":45,"nodeType":"322","messageId":"323","endLine":237,"endColumn":89},{"ruleId":"324","severity":1,"message":"325","line":449,"column":71,"nodeType":"326","messageId":"327","endLine":449,"endColumn":73},{"ruleId":"324","severity":1,"message":"325","line":452,"column":123,"nodeType":"326","messageId":"327","endLine":452,"endColumn":125},{"ruleId":"314","severity":1,"message":"318","line":39,"column":8,"nodeType":"316","endLine":39,"endColumn":10,"suggestions":"328"},{"ruleId":"320","severity":1,"message":"321","line":64,"column":33,"nodeType":"322","messageId":"323","endLine":66,"endColumn":67},{"ruleId":"314","severity":1,"message":"318","line":27,"column":8,"nodeType":"316","endLine":27,"endColumn":10,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":30,"column":12,"nodeType":"332","messageId":"333","endLine":30,"endColumn":17},{"ruleId":"314","severity":1,"message":"334","line":41,"column":8,"nodeType":"316","endLine":41,"endColumn":10,"suggestions":"335"},{"ruleId":"320","severity":1,"message":"321","line":90,"column":33,"nodeType":"322","messageId":"323","endLine":92,"endColumn":67},{"ruleId":"314","severity":1,"message":"336","line":62,"column":8,"nodeType":"316","endLine":62,"endColumn":10,"suggestions":"337"},{"ruleId":"320","severity":1,"message":"321","line":229,"column":29,"nodeType":"322","messageId":"323","endLine":231,"endColumn":82},{"ruleId":"314","severity":1,"message":"338","line":21,"column":8,"nodeType":"316","endLine":21,"endColumn":10,"suggestions":"339"},{"ruleId":"324","severity":1,"message":"325","line":55,"column":79,"nodeType":"326","messageId":"327","endLine":55,"endColumn":81},{"ruleId":"314","severity":1,"message":"318","line":43,"column":8,"nodeType":"316","endLine":43,"endColumn":10,"suggestions":"340"},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["343"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["344"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["345"],["346"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'handleSubmit', 'setFieldValue', and 'values.description'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'dispatch' and 'handleSubmit'. Either include them or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params'. Either include them or remove the dependency array.",["349"],["350"],"no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"353","fix":"355"},{"desc":"353","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"353","fix":"363"},"Update the dependencies array to be: [dispatch, history]",{"range":"364","text":"365"},"Update the dependencies array to be: [dispatch]",{"range":"366","text":"367"},{"range":"368","text":"367"},{"range":"369","text":"367"},"Update the dependencies array to be: [dispatch, handleSubmit, setFieldValue, values.description]",{"range":"370","text":"371"},"Update the dependencies array to be: [dispatch, handleSubmit]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, props.match.params]",{"range":"374","text":"375"},{"range":"376","text":"367"},[1246,1248],"[dispatch, history]",[2028,2030],"[dispatch]",[1286,1288],[1134,1136],[1188,1190],"[dispatch, handleSubmit, setFieldValue, values.description]",[2165,2167],"[dispatch, handleSubmit]",[711,713],"[dispatch, props.match.params]",[1439,1441]]